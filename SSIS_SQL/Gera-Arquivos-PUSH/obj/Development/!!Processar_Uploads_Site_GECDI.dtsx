<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/27/2021 12:32:26 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DF5138NB223"
  DTS:CreatorName="CORPCAIXA\c051431"
  DTS:DTSID="{BE732A36-0F17-4DE7-A002-5C81E6FCB63F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="1046"
  DTS:ObjectName="Processar_Uploads_Site_GECDI"
  DTS:PackageType="5"
  DTS:VersionBuild="126"
  DTS:VersionGUID="{2DC849C1-6F31-4451-8808-F2CE6103D08E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQL-SR671-PUSH]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2D83BD83-B4B0-40EA-8C8E-6C62AEC37995}"
      DTS:ObjectName="SQL-SR671-PUSH">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=df7436sr671;Initial Catalog=DB5138_PUSH;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8530E937-8BF5-4A76-AC79-8D41C6F658ED}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Arquivo_Upload">
      <DTS:VariableValue
        DTS:DataType="8">\\arquivos.caixa\br\df5325fs201\SUESC\Publico\!PUSH_Upload\upload_id000000000002_teste-carga-full.zip</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE35BD08-61F6-48BB-96FD-E8FDD9538527}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="idSolicitacao_PUSH">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0059DB39-551F-4750-A57E-B54DC2FC7AD1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="idSolicitacao_Upload">
      <DTS:VariableValue
        DTS:DataType="20">273</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{54EB7270-27DA-49CC-9D96-BFD082906ED9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Lista_Arquivos_Upload_para_Carregar">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82B8E1BF-047D-4132-A98D-9021E0557574}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Qtd_Total_Registros">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7C2318F0-200B-4005-AB1A-FEE20B2C91A1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Registros_Agendados_Enviados">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Captura Lista de Arquivos Uploados ou Tarefas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarefa Executar SQL"
      DTS:DTSID="{B28F432D-890B-4041-BE24-492437F20486}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Captura Lista de Arquivos Uploados ou Tarefas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2D83BD83-B4B0-40EA-8C8E-6C62AEC37995}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT &#xA;       [idSolicitacao_Upload]&#xA;      ,[idSolicitacao_PUSH]&#xA;      ,[Arquivo]&#xA;FROM &#xA;      [DB5138_PUSH].[FILA].[Solicitacao_Upload] WITH (NOLOCK)&#xA;WHERE&#xA;    Processado = 0&#xA;ORDER BY&#xA;    Data_Upload,&#xA;    idSolicitacao_Upload"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Lista_Arquivos_Upload_para_Carregar" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Contêiner do Loop Foreach"
      DTS:DTSID="{EE50CFA3-D8D9-49BB-BB64-61D79C0B1BA3}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Para cada Upload Arquivo Registrado na Fila">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{C91F9B04-DE98-4D5D-91AB-0A3CA1A0BBEC}"
        DTS:ObjectName="{C91F9B04-DE98-4D5D-91AB-0A3CA1A0BBEC}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::Lista_Arquivos_Upload_para_Carregar" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila\Apagar arquivo de upload"
          DTS:CreationName="Microsoft.FileSystemTask"
          DTS:Description="Tarefa Sistema de Arquivos"
          DTS:DTSID="{F2D697E4-F8FB-42DD-8190-E11D359B0111}"
          DTS:ExecutableType="Microsoft.FileSystemTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apagar arquivo de upload"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::Arquivo_Upload"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila\Apagar todos os clientes caso não tenham sido agendados"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{b2bf11d9-a1a8-4e4e-ab15-3d9945105f6b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Apagar todos os clientes caso não tenham sido agendados"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2D83BD83-B4B0-40EA-8C8E-6C62AEC37995}"
              SQLTask:SqlStatementSource="DECLARE @idSolicitacao_PUSH AS BIGINT = ?&#xA;&#xA;BEGIN TRANSACTION&#xA;    DELETE FROM &#xA;        [DB5138_PUSH].[FILA].[Solicitacao_Clientes]&#xA;    WHERE&#xA;        [idSolicitacao_PUSH] = @idSolicitacao_PUSH&#xA;        AND [idSolicitacao_Simulacao_Envio] IS NULL&#xA;COMMIT TRANSACTION&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::idSolicitacao_PUSH"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Tarefa Fluxo de Dados"
          DTS:DTSID="{4ED816BE-D37C-4A9D-AE60-78945A5234E8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Importar Arquivo"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload"
                  componentClassID="Microsoft.OLEDBCommand"
                  contactInfo="Comando OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos os Direitos Reservados; http://www.microsoft.com/sql/support;2"
                  description="Executa uma instrução SQL para cada linha em um fluxo de dados. Por exemplo, chame um procedimento armazenado 'new employee setup' para cada linha da tabela 'new employees'. Observação: a execução de uma instrução SQL para cada linha de um fluxo de dados grande pode demorar."
                  name="Atualiza Progresso em FILA&gt;Solicitacao_Upload"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="O comando SQL a ser executado."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">DECLARE
    @idSolicitacao_Upload    BIGINT        = ?,
    @Processado              BIT           = ?,
    @Data_Processamento      DATETIME      = ?,
    @Rejeitado               BIT           = ?,
    @Registros_Total         INT           = ?,
    @Registros_Aceitos       INT           = ?,
    @Registros_Rejeitados    INT           = ?,
    @Resultado_Processamento NVARCHAR(MAX) = ?,
    @Tempo_Decorrido         VARCHAR(20)   = ?



UPDATE [DB5138_PUSH].[FILA].[Solicitacao_Upload]
SET
       [Processado]                =  @Processado
      ,[Data_Processamento]        =  @Data_Processamento
      ,[Rejeitado]                 =  @Rejeitado
      ,[Registros_Total]           =  @Registros_Total
      ,[Registros_Aceitos]         =  @Registros_Aceitos
      ,[Registros_Rejeitados]      =  @Registros_Rejeitados
      ,[Resultado_Processamento]   =  @Resultado_Processamento
      ,[Tempo_Decorrido]           =  @Tempo_Decorrido
WHERE
    [idSolicitacao_Upload] = @idSolicitacao_Upload
</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica a página de código de coluna a ser usada quando não há informações de página de código disponíveis a partir da fonte de dados."
                      name="DefaultCodePage">1252</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SQL-SR671-PUSH]"
                      connectionManagerRefId="Package.ConnectionManagers[SQL-SR671-PUSH]"
                      description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB]"
                      errorOrTruncationOperation="Execução de Comando"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrada de Comando OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[idSolicitacao_Upload]"
                          cachedDataType="i8"
                          cachedName="idSolicitacao_Upload"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_0]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[idSolicitacao_Upload]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Processado]"
                          cachedDataType="bool"
                          cachedName="Processado"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_1]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Processado]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Data_Processamento]"
                          cachedDataType="dbDate"
                          cachedName="Data_Processamento"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_2]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Data_Processamento]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Rejeitado]"
                          cachedDataType="bool"
                          cachedName="Rejeitado"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_3]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Rejeitado]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Registros_Total]"
                          cachedDataType="i4"
                          cachedName="Registros_Total"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_4]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Total]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Registros_Aceitos]"
                          cachedDataType="i4"
                          cachedName="Registros_Aceitos"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_5]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Aceitos]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Registros_Rejeitados]"
                          cachedDataType="i4"
                          cachedName="Registros_Rejeitados"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_6]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Rejeitados]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Resultado_Processamento]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Resultado_Processamento"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_7]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Resultado_Processamento]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].Columns[Tempo_Decorrido]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="Tempo_Decorrido"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_8]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Tempo_Decorrido]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_0]"
                          dataType="i8"
                          name="Param_0">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_1]"
                          dataType="bool"
                          name="Param_1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_2]"
                          dataType="dbTimeStamp"
                          name="Param_2">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_3]"
                          dataType="bool"
                          name="Param_3">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_4]"
                          dataType="i4"
                          name="Param_4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_5]"
                          dataType="i4"
                          name="Param_5">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_6]"
                          dataType="i4"
                          name="Param_6">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">81</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_7]"
                          dataType="nText"
                          name="Param_7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">193</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB].ExternalColumns[Param_8]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Param_8">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Informações de parâmetro. Corresponde os valores de DBPARAMFLAGSENUM de OLE DB."
                              name="DBParamInfoFlags">65</property>
                          </properties>
                        </externalMetadataColumn>
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Outputs[Saída de Comando OLE DB]"
                      exclusionGroup="1"
                      name="Saída de Comando OLE DB"
                      synchronousInputId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Outputs[Saída de Erro de Comando OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Saída de Erro de Comando OLE DB"
                      synchronousInputId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Outputs[Saída de Erro de Comando OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Outputs[Saída de Erro de Comando OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Outputs[Saída de Erro de Comando OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Outputs[Saída de Erro de Comando OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Inclui e executa código de script personalizado. Por exemplo, aplique uma regra de negócio que limite um intervalo de valores válidos em uma coluna &quot;de entrada&quot; ou adicione valores em duas colunas e calcule a média da soma.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; Todos os Direitos Reservados; http://www.microsoft.com/sql/support;10"
                  description="Inclui e executa código de script personalizado. Por exemplo, aplique uma regra de negócio que limite um intervalo de valores válidos em uma coluna &quot;de entrada&quot; ou adicione valores em duas colunas e calcule a média da soma."
                  name="Leitura do Arquivo de Upload"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Armazena o código-fonte do componente"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public SolicitacaoClientesBuffer SolicitacaoClientesBuffer;

    public ResultadoProcessamentoBuffer ResultadoProcessamentoBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != SolicitacaoClientesBuffer)
        {
            SolicitacaoClientesBuffer.SetEndOfRowset();
            SolicitacaoClientesBuffer = null;
        }

        if (null != ResultadoProcessamentoBuffer)
        {
            ResultadoProcessamentoBuffer.SetEndOfRowset();
            ResultadoProcessamentoBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Solicitacao_Clientes"))
            {
                SolicitacaoClientesBuffer = new SolicitacaoClientesBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Resultado_Processamento"))
            {
                ResultadoProcessamentoBuffer = new ResultadoProcessamentoBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ArquivoUpload
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["Arquivo_Upload"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int32 idSolicitacaoPUSH
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["idSolicitacao_PUSH"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public Int64 idSolicitacaoUpload
    {
        get
        {
            return (Int64)(ParentComponent.ReadOnlyVariables["idSolicitacao_Upload"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.IO;
using System.IO.Compression;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        char[] separators = { '\u0009', ';', '|' };
        string cpf = "";
        string v1 = "";
        string v2 = "";
        string v3 = "";
        string v4 = "";
        string v5 = "";
        bool arquivo_rejeitado = false;
        int linhas = 0;
        int validos = 0;
        int rejeitados = 0;
        string resultado_processamento = $"Processamento Inicializado {DateTime.Now} | ";
        DateTime inicio = DateTime.Now;

        ResultadoProcessamentoBuffer.AddRow();

        string zipPath = Variables.ArquivoUpload; //@"\\arquivos.caixa\br\df5325fs201\SUESC\Publico\!PUSH_Upload\upload_id000000000001_teste-carga-full.zip";

        if (File.Exists(zipPath))
        {
            try
            {
                using (ZipArchive archive = ZipFile.OpenRead(zipPath))
                {
                    ZipArchiveEntry entry = archive.Entries.First();
                    using (var stream = new StreamReader(entry.Open()))
                    {
                        while (!stream.EndOfStream)
                        {
                            try
                            {
                                string linha = stream.ReadLine().Trim();
                                linhas++;
                                if (linha != "")
                                {
                                    string[] colunas = linha.Split(separators);
                                    if (colunas.Length >= 1)
                                    {
                                        cpf = colunas[0].Replace("\"","").Trim();
                                        if (IsCpf(cpf))
                                        {
                                            if (colunas.Length >= 2)
                                                v1 = colunas[1].Replace("\"", "").Trim();
                                            else
                                                v1 = "-";

                                            if (colunas.Length >= 3)
                                                v2 = colunas[2].Replace("\"", "").Trim();
                                            else
                                                v2 = "-";

                                            if (colunas.Length >= 4)
                                                v3 = colunas[3].Replace("\"", "").Trim();
                                            else
                                                v3 = "-";

                                            if (colunas.Length >= 5)
                                                v4 = colunas[4].Replace("\"", "").Trim();
                                            else
                                                v4 = "-";

                                            if (colunas.Length >= 6)
                                                v5 = colunas[5].Replace("\"", "").Trim();
                                            else
                                                v5 = "-";

                                            validos++;

                                            //Console.WriteLine($"{cpf} | {v1} | {v2} | {v3} | {v4} | {v5}");
                                            SolicitacaoClientesBuffer.AddRow();
                                            SolicitacaoClientesBuffer.CPF = long.Parse(cpf);
                                            SolicitacaoClientesBuffer.idSolicitacaoPUSH = Variables.idSolicitacaoPUSH;
                                            if (v1 != "-") SolicitacaoClientesBuffer.Campo1 = v1; else SolicitacaoClientesBuffer.Campo1_IsNull = true;
                                            if (v2 != "-") SolicitacaoClientesBuffer.Campo2 = v2; else SolicitacaoClientesBuffer.Campo2_IsNull = true;
                                            if (v3 != "-") SolicitacaoClientesBuffer.Campo3 = v3; else SolicitacaoClientesBuffer.Campo3_IsNull = true;
                                            if (v4 != "-") SolicitacaoClientesBuffer.Campo4 = v4; else SolicitacaoClientesBuffer.Campo4_IsNull = true;
                                            if (v5 != "-") SolicitacaoClientesBuffer.Campo5 = v5; else SolicitacaoClientesBuffer.Campo5_IsNull = true;
                                        }
                                        else
                                            rejeitados++;
                                    }
                                    else rejeitados++;
                                }
                                else rejeitados++;
                            }
                            catch (Exception ex2)
                            {
                                rejeitados++;
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                //throw ex;
                resultado_processamento += ex.Message;
                arquivo_rejeitado = true;
            }
        }
        else
        {
            resultado_processamento += "Arquivo Não Existe";
            arquivo_rejeitado = true;
        }

        ResultadoProcessamentoBuffer.idSolicitacaoUpload = Variables.idSolicitacaoUpload;
        ResultadoProcessamentoBuffer.DataProcessamento = DateTime.Now;
        ResultadoProcessamentoBuffer.Processado = true;
        ResultadoProcessamentoBuffer.Rejeitado = arquivo_rejeitado;
        ResultadoProcessamentoBuffer.RegistrosAceitos = validos;
        ResultadoProcessamentoBuffer.RegistrosRejeitados = rejeitados;
        ResultadoProcessamentoBuffer.RegistrosTotal = linhas;
        ResultadoProcessamentoBuffer.TempoDecorrido = (DateTime.Now - inicio).ToString();
        ResultadoProcessamentoBuffer.ResultadoProcessamento = $"{resultado_processamento} | Termino: {linhas.ToString("#,##0")} linhas lidas | {validos.ToString("#,##0")} linhas válidas | {rejeitados.ToString("#,##0")} linhas rejeitadas | Processamento Finalizado {DateTime.Now}";
        ResultadoProcessamentoBuffer.SetEndOfRowset();

    }



    static bool IsValid(string cpfCnpj)
    {
        return (IsCpf(cpfCnpj) || IsCnpj(cpfCnpj));
    }

    static bool IsCpf(string cpf)
    {
        int[] multiplicador1 = new int[9] { 10, 9, 8, 7, 6, 5, 4, 3, 2 };
        int[] multiplicador2 = new int[10] { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 };

        cpf = cpf.Trim().Replace(".", "").Replace("-", "");
        cpf = $"00000000000{cpf}";
        cpf = cpf.Substring(cpf.Length - 11, 11);
        if (cpf.Length != 11)
            return false;

        for (int j = 0; j < 10; j++)
            if (j.ToString().PadLeft(11, char.Parse(j.ToString())) == cpf)
                return false;

        string tempCpf = cpf.Substring(0, 9);
        int soma = 0;

        for (int i = 0; i < 9; i++)
            soma += int.Parse(tempCpf[i].ToString()) * multiplicador1[i];

        int resto = soma % 11;
        if (resto < 2)
            resto = 0;
        else
            resto = 11 - resto;

        string digito = resto.ToString();
        tempCpf = tempCpf + digito;
        soma = 0;
        for (int i = 0; i < 10; i++)
            soma += int.Parse(tempCpf[i].ToString()) * multiplicador2[i];

        resto = soma % 11;
        if (resto < 2)
            resto = 0;
        else
            resto = 11 - resto;

        digito = digito + resto.ToString();

        return cpf.EndsWith(digito);
    }

    static bool IsCnpj(string cnpj)
    {
        int[] multiplicador1 = new int[12] { 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2 };
        int[] multiplicador2 = new int[13] { 6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2 };

        cnpj = cnpj.Trim().Replace(".", "").Replace("-", "").Replace("/", "");
        cnpj = $"00000000000000{cnpj}";
        cnpj = cnpj.Substring(cnpj.Length - 14, 14);
        if (cnpj.Length != 14)
            return false;

        string tempCnpj = cnpj.Substring(0, 12);
        int soma = 0;

        for (int i = 0; i < 12; i++)
            soma += int.Parse(tempCnpj[i].ToString()) * multiplicador1[i];

        int resto = (soma % 11);
        if (resto < 2)
            resto = 0;
        else
            resto = 11 - resto;

        string digito = resto.ToString();
        tempCnpj = tempCnpj + digito;
        soma = 0;
        for (int i = 0; i < 13; i++)
            soma += int.Parse(tempCnpj[i].ToString()) * multiplicador2[i];

        resto = (soma % 11);
        if (resto < 2)
            resto = 0;
        else
            resto = 11 - resto;

        digito = digito + resto.ToString();

        return cnpj.EndsWith(digito);
    }


}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class SolicitacaoClientesBuffer: ScriptBuffer

{
    public SolicitacaoClientesBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 idSolicitacaoPUSH
    {
        set
        {
            this[0] = value;
        }
    }
    public bool idSolicitacaoPUSH_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public Int64 CPF
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CPF_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String Campo1
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Campo1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String Campo2
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Campo2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String Campo3
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Campo3_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String Campo4
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Campo4_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String Campo5
    {
        set
        {
            this[6] = value;
        }
    }
    public bool Campo5_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ResultadoProcessamentoBuffer: ScriptBuffer

{
    public ResultadoProcessamentoBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 idSolicitacaoUpload
    {
        set
        {
            this[0] = value;
        }
    }
    public bool idSolicitacaoUpload_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public Boolean Processado
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Processado_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public DateTime DataProcessamento
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DataProcessamento_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public Boolean Rejeitado
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Rejeitado_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public Int32 RegistrosTotal
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RegistrosTotal_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public Int32 RegistrosAceitos
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RegistrosAceitos_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public Int32 RegistrosRejeitados
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RegistrosRejeitados_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String TempoDecorrido
    {
        set
        {
            this[7] = value;
        }
    }
    public bool TempoDecorrido_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    public String ResultadoProcessamento
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ResultadoProcessamento_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("A propriedade IsNull não pode ser definida como False. Em vez de fazer isso, atribua um valor à coluna.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f20d913daf14265b8001e1ad1e078c3.Properties.Settings.get_Default():SC_2f20d913daf14265b8001e1ad1e078c3.Properties.Sett" +
    "ings")]

namespace SC_2f20d913daf14265b8001e1ad1e078c3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2f20d913daf14265b8001e1ad1e078c3.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A345E366-711F-49E8-9C81-4B2415346556}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2f20d913daf14265b8001e1ad1e078c3</RootNamespace>
    <AssemblyName>SC_2f20d913daf14265b8001e1ad1e078c3</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.IO.Compression.FileSystem" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_2f20d913daf14265b8001e1ad1e078c3</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_2f20d913daf14265b8001e1ad1e078c3</msb:DisplayName>
		<msb:ProjectId>{B67634B3-2E08-4E7E-852B-7844B169695D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2f20d913daf14265b8001e1ad1e078c3.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2f20d913daf14265b8001e1ad1e078c3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2f20d913daf14265b8001e1ad1e078c3")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f20d913daf14265b8001e1ad1e078c3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f20d913daf14265b8001e1ad1e078c3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2f20d913daf14265b8001e1ad1e078c3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2f20d913daf14265b8001e1ad1e078c3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2f20d913daf14265b8001e1ad1e078c3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Armazena a representação binária do componente"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2f20d913daf14265b8001e1ad1e078c3.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAABzeWIAAAAAAAAAAOAAIiALATAAADAAAAAIAAAAAAAAuk0A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGhNAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgC4AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
TQAAAAAAAEgAAAACAAUAgCsAADAhAAABAAAAAAAAALBMAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAcAQQQAAAEAABEZjSAAAAEl
0AwAAAQoEgAACgpyAQAAcAtyAQAAcAxyAQAAcA1yAQAAcBMEcgEAAHATBXIBAABwEwYWEwcWEwgW
EwkWEwpyAwAAcCgTAAAKjA4AAAEoFAAAChMLKBMAAAoTDAJ7BAAABG8tAAAGAnsCAAAEbzcAAAYT
DRENKBUAAAo5uAIAABENKBYAAAoTDhEObxcAAAooAQAAK28ZAAAKcxoAAAoTDzhRAgAAABEPbxsA
AApvHAAAChMQEQgXWBMIERByAQAAcCgdAAAKORoCAAAREAZvHgAAChMRERGOaRc//gEAABERFppy
RwAAcHIBAABwbx8AAApvHAAACgsHKAUAAAY50gEAABERjmkYMhsREReackcAAHByAQAAcG8fAAAK
bxwAAAoMKwZySwAAcAwREY5pGTIbEREYmnJHAABwcgEAAHBvHwAACm8cAAAKDSsGcksAAHANERGO
aRoyHBERGZpyRwAAcHIBAABwbx8AAApvHAAAChMEKwdySwAAcBMEERGOaRsyHBERGppyRwAAcHIB
AABwbx8AAApvHAAAChMFKwdySwAAcBMFERGOaRwyHBERG5pyRwAAcHIBAABwbx8AAApvHAAAChMG
KwdySwAAcBMGEQkXWBMJAnsDAAAEbxcAAAYCewMAAAQHKCAAAApvCwAABgJ7AwAABAJ7AgAABG84
AAAGam8JAAAGCHJLAABwKB0AAAosDgJ7AwAABAhvDQAABisMAnsDAAAEF28OAAAGCXJLAABwKB0A
AAosDgJ7AwAABAlvDwAABisMAnsDAAAEF28QAAAGEQRySwAAcCgdAAAKLA8CewMAAAQRBG8RAAAG
KwwCewMAAAQXbxIAAAYRBXJLAABwKB0AAAosDwJ7AwAABBEFbxMAAAYrDAJ7AwAABBdvFAAABhEG
cksAAHAoHQAACiwPAnsDAAAEEQZvFQAABiskAnsDAAAEF28WAAAGKxYRChdYEworDhEKF1gTCisG
EQoXWBMK3gkmEQoXWBMK3gARD28hAAAKOaP9///eDBEPLAcRD28iAAAK3N4MEQ4sBxEObyIAAArc
3igTEhELERJvIwAACigkAAAKEwsXEwfeERELck8AAHAoJAAAChMLFxMHAnsEAAAEAnsCAAAEbzkA
AAZvGwAABgJ7BAAABCgTAAAKbx8AAAYCewQAAAQXbx0AAAYCewQAAAQRB28hAAAGAnsEAAAEEQlv
JQAABgJ7BAAABBEKbycAAAYCewQAAAQRCG8jAAAGAnsEAAAEKBMAAAoRDCglAAAKExMSE/4WEgAA
AW8mAAAKbykAAAYCewQAAARydQAAcBuNFwAAASUWEQuiJRcSCHJOAQBwKCcAAAqiJRgSCXJOAQBw
KCcAAAqiJRkSCnJOAQBwKCcAAAqiJRooEwAACowOAAABoigoAAAKbysAAAYCewQAAARvLgAABioA
AABBZAAAAAAAAK0AAABHAgAA9AIAAAkAAAARAAABAgAAAKcAAABkAgAACwMAAAwAAAAAAAAAAgAA
AI8AAACKAgAAGQMAAAwAAAAAAAAAAAAAAIYAAAChAgAAJwMAABcAAAARAAABRgIoBQAABi0HAigG
AAAGKhcqAAATMAQAcgEAAAIAABEfCY0vAAABJdAOAAAEKBIAAAoKHwqNLwAAASXQDQAABCgSAAAK
CwJvHAAACnJaAQBwcgEAAHBvHwAACnJLAABwcgEAAHBvHwAAChAAcl4BAHACKCQAAAoQAAICbykA
AAofC1kfC28qAAAKEAACbykAAAofCy4CFioWEwYrKhIGKCsAAAofCxIGKCsAAAooLAAACm8tAAAK
AiguAAAKLAIWKhEGF1gTBhEGHwoy0AIWHwlvKgAACgwWDRYTByskCQgRB28vAAAKEwgSCCgwAAAK
KDEAAAoGEQeUWlgNEQcXWBMHEQcfCTLWCR8LXRMEEQQYLwUWEwQrBx8LEQRZEwQSBCgrAAAKEwUI
EQUoJAAACgwWDRYTCSskCQgRCW8vAAAKEwgSCCgwAAAKKDEAAAoHEQmUWlgNEQkXWBMJEQkfCjLW
CR8LXRMEEQQYLwUWEwQrBx8LEQRZEwQRBRIEKCsAAAooJAAAChMFAhEFbzIAAAoqAAATMAQATAEA
AAMAABEfDI0vAAABJdAKAAAEKBIAAAoKHw2NLwAAASXQCwAABCgSAAAKCwJvHAAACnJaAQBwcgEA
AHBvHwAACnJLAABwcgEAAHBvHwAACnJ2AQBwcgEAAHBvHwAAChAAcnoBAHACKCQAAAoQAAICbykA
AAofDlkfDm8qAAAKEAACbykAAAofDi4CFioCFh8MbyoAAAoMFg0WEwYrJAkIEQZvLwAAChMHEgco
MAAACigxAAAKBhEGlFpYDREGF1gTBhEGHwwy1gkfC10TBBEEGC8FFhMEKwcfCxEEWRMEEgQoKwAA
ChMFCBEFKCQAAAoMFg0WEwgrJAkIEQhvLwAAChMHEgcoMAAACigxAAAKBxEIlFpYDREIF1gTCBEI
Hw0y1gkfC10TBBEEGC8FFhMEKwcfCxEEWRMEEQUSBCgrAAAKKCQAAAoTBQIRBW8yAAAKKh4CKDAA
AAYqKgIDBAUoMwAACio6AhYDjC0AAAEoNAAACipaAywIAhYoNQAACipymAEAcHM2AAAKejoCFwOM
LQAAASg0AAAKKloDLAgCFyg1AAAKKnKYAQBwczYAAAp6JgIYAyg0AAAKKloDLAgCGCg1AAAKKnKY
AQBwczYAAAp6JgIZAyg0AAAKKloDLAgCGSg1AAAKKnKYAQBwczYAAAp6JgIaAyg0AAAKKloDLAgC
Gig1AAAKKnKYAQBwczYAAAp6JgIbAyg0AAAKKloDLAgCGyg1AAAKKnKYAQBwczYAAAp6JgIcAyg0
AAAKKloDLAgCHCg1AAAKKnKYAQBwczYAAAp6HgIoNwAACioeAig4AAAKKh4CKDkAAAoqOgIXA4wx
AAABKDQAAAoqOgIYA4wOAAABKDQAAAoqOgIZA4wxAAABKDQAAAoqOgIaA4wvAAABKDQAAAoqOgIb
A4wvAAABKDQAAAoqOgIcA4wvAAABKDQAAAoqJgIdAyg0AAAKKloDLAgCHSg1AAAKKnKYAQBwczYA
AAp6JgIeAyg0AAAKKloDLAgCHig1AAAKKnKYAQBwczYAAAp6fgIoOgAACgICczUAAAZ9AQAABAIC
czYAAAZ9AgAABCoGKtYCewMAAAQsEgJ7AwAABG8YAAAGAhR9AwAABAJ7BAAABCwSAnsEAAAEby4A
AAYCFH0EAAAEKhMwBQBzAAAABAAAERYKK1gEBpQOBHJpAgBwKDsAAAozGQIFBpoCBAaUKDwAAAoO
BHMIAAAGfQMAAAQEBpQOBHKTAgBwKDsAAAozGQIFBpoCBAaUKDwAAAoOBHMaAAAGfQQAAAQGF1gK
BgMypAJvNAAABgJvMQAABgIoMgAABio6Aig9AAAKAgN9BQAABCo6Aig9AAAKAgN9BgAABCqWAnsG
AAAEbz4AAApywwIAcG8/AAAKKEAAAApvQQAACnQkAAABKpYCewYAAARvPgAACnLhAgBwbz8AAAoo
QAAACm9BAAAKpS8AAAEqlgJ7BgAABG8+AAAKcgcDAHBvPwAACihAAAAKb0EAAAqlLQAAASoeAig9
AAAKKq5+BwAABC0ecjEDAHDQCAAAAihCAAAKb0MAAApzRAAACoAHAAAEfgcAAAQqGn4IAAAEKh4C
gAgAAAQqGn4JAAAEKh4CKEUAAAoqLnM/AAAGgAkAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAlAwAACN+AAAADQAAtA0AACNTdHJpbmdzAAAAALQaAACkAwAAI1VTAFge
AAAQAAAAI0dVSUQAAABoHgAAyAIAACNCbG9iAAAAAAAAAAIAAAFXlaIhCQsAAAD6ATMAFgAAAQAA
ADgAAAAPAAAADgAAAEAAAAAwAAAARQAAABEAAAAFAAAABAAAAAUAAAAmAAAAJwAAAAUAAAABAAAA
CAAAAAEAAAAFAAAAAQAAAAAAsQYBAAAAAAAGADAF2QoGAMQF2QoGAHwExgoPAE0LAAAGAKkEIwkG
ABMFIwkGAPQEIwkGAKsFIwkGAFAFIwkGAGkFIwkGAMAEIwkGANsEFAYKAIQFqgMGAJgDmwgOAP8F
1AgGAAgKiQIGAEUJmwgGALsImwgKAGYKqgMSACAKqgMKALwJqgMKALoMqgMGAGwMmwgGAF8ExgoG
AHcK+QoGAH8J/wgWAC8EmwYWAJAEmwYWAAkE6ggGAEQE2QoGAMsDmwgGAAMKmwgGACYM2QoGAHcN
mwgGAFkDmwgGADAGmwgGAJMDiQIaAJAD1AgGAGUAfAYOAIoN1AgeAEID9wkGAFcAnAIGAGgIiQIG
ABUKiQIGAOIAmwgGAE0DmwgGAIUAmwgGADUJmwgGALMImwgiABEAhwoiAAEAhwpbAC4NAAAiACIA
hwoGANADmwgGAGwDmwgGAIENIwkAAAAAzwEAAAAAAQABAAEAEADJCAAAFAABAAEAAQAQAEwKAABN
AAEACAABABAALwoAAE0AAQAaAAEAEACcDAAAWQABADAAAQAQANsLAABdAAUANQABABAAowsAAF0A
BgA2AAAAEAAAC2gLXQAHADoAAAEQANILaAt1AAkAPgAAAQAA2AEAAF0ACgBBABMBAAAbAQAAfQAP
AEEAEwEAAP4AAAB9AA8AQQATAQAAOgAAAH0ADwBBABMBAABgAQAAfQAPAEEAEwEAAIsAAAB9AA8A
QQAGANsLZAEGAKMLaAEGAEwKbAEGAC8KcAEBAKoMdAEBAKoMdAERAKcIeAERAPkDfAERACYDgAEz
ASwChAEzAQMCiAEzATcBjAEzAX0BkAEzAaYBlAFQIAAAAADGAOIFBgABAFggAAAAAMYA7QUGAAEA
YCAAAAAAxgBKDAYAAQAUJQAAAACRABYDTgABACglAAAAAJEACgZOAAIAqCYAAAAAkQBdBk4AAwAA
KAAAAACGGK8KBgAEAAgoAAAAAIYYrwoAAQQAEygAAAAAhghzApgBBwAiKAAAAACGCEIHnQEIADko
AAAAAIYIVQKYAQkASCgAAAAAhggzB50BCgBfKAAAAACGCHoAEAALAGkoAAAAAIYI2QadAQwAgCgA
AAAAhgioABAADQCKKAAAAACGCOsGnQEOAKEoAAAAAIYI1wAQAA8AqygAAAAAhgj9Bp0BEADCKAAA
AACGCOgAEAARAMwoAAAAAIYIDwedARIA4ygAAAAAhgjzABAAEwDtKAAAAACGCCEHnQEUAAQpAAAA
AIYAZg0GABUADCkAAAAAhgBzDAYAFQAUKQAAAACGAHYMoAAVAAgoAAAAAIYYrwoAARUAEygAAAAA
hgjYApgBGAAiKAAAAACGCF8HnQEZABwpAAAAAIYITwmdARoASCgAAAAAhgiYB50BGwArKQAAAACG
CIsJogEcAGkoAAAAAIYI3QedAR0AOikAAAAAhgheCZ0BHgCKKAAAAACGCK4HnQEfAEkpAAAAAIYI
aQYBACAAqygAAAAAhgh+B50BIQBYKQAAAACGCP8LAQAiAMwoAAAAAIYIOwidASMAZykAAAAAhgjn
CwEAJADtKAAAAACGCBwInQElAHYpAAAAAIYIbAkQACYAgCkAAAAAhgjDB50BJwCXKQAAAACGCKEJ
EAAoAKEpAAAAAIYI+gedASkABCkAAAAAhgBmDQYAKgAMKQAAAACGAHMMBgAqABQpAAAAAIYAdgyg
ACoAuCkAAAAAhhivCgYAKgDYKQAAAADGATwMBgAqANopAAAAAIEAAgMGACoAECoAAAAAxgAODagB
KgDYKQAAAADGAUoMBgAuAI8qAAAAAIYYrwq0AS4AnioAAAAAhhivCrQBLwCtKgAAAACGCPAChAAw
ANMqAAAAAIYIXQLOADAA+SoAAAAAhgjAAroBMAAfKwAAAACDGK8KBgAwACcrAAAAAJMIcwq+ATAA
UysAAAAAkwjhA8MBMABaKwAAAACTCO0DyAEwAGIrAAAAAJYIkAzOATEAaSsAAAAAhhivCgYAMQBx
KwAAAACRGLUK0wExAAAAAQBVBgAAAQAQBgAAAQBkBgAAAQBsCgAAAgCtCwAAAwDKCQAAAQD5BQAA
AQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5
BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQBsCgAAAgCtCwAAAwDKCQAAAQD5BQAAAQD5BQAAAQD5BQAA
AQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5
BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQD5BQAAAQBCDAAAAgC8CgAAAwAeDAAABADKCQAA
AQDADAAAAQDADAAAAQD5BQkArwoBABEArwoGABkArwoKACkArwoQADEArwoQADkArwoQAEEArwoQ
AEkArwoQAFEArwoQAFkArwoQAGEArwoQAGkArwoGAMEArwoGAOEArwoVAPEArwoGALEA4gUGALEA
7QUGAAkBbQ05AHEAXg1DACEBZQxIACkBNQxOADEBtwJTAHkAXAtZAEkBCA1kAEEBxAh3AIEArwp9
AGEBoQOEACEBogiEACEBpg2IACEBigyOACEBHgOVAGkBKQSbAIEAXwigAHEBIQQGAIkANgOEACEB
XgykAHEAFAmqALkALgaEAHkBLgazACEBZQy4ACEBQQbOACEBNwbSAHkBLgaEAAEBKQTYACEBggzd
ACEBmg2IACEBFAzjAAEBLgaEAHkBKQToACEBTAbtAJkArwoAAZkAeAgKAZkAVwgBAIEBrwoQAJkA
Zg0GAJkAcwwGAJkAdgygALEArwoGALEA9wEUAbEAwQsbAbkArwoGALEAlwshAZEBbwgnAbEASQ0u
AZkBGg00AbEBfgM7AbEBfQ1EAckArwpKAekArwoGAC4ACwD7AS4AEwAEAi4AGwAjAi4AIwAsAi4A
KwBVAi4AMwBVAi4AOwBVAi4AQwAsAi4ASwBbAi4AUwBVAi4AWwByAkMAYwDAAgMBawDAAiEBewDA
AkMBewDAAokEcwAjAqkEcwAjAgEABgAAAAsAAQAkAAAADAABACgAAAANAAEAMAAAAA4AAQA0AAAA
DwAbAL8A8gAQAQMAAQAEAA8ABwAhAAgAJAAJACYAAAB3AtcBAABGB9sBAABZAtcBAAA3B9sBAAB+
AN8BAADdBtsBAACsAN8BAADvBtsBAADbAN8BAAABB9sBAADsAN8BAAATB9sBAAD3AN8BAAAlB9sB
AADcAtcBAABjB9sBAABTCdsBAACcB9sBAACPCeMBAADhB9sBAABiCdsBAACyB9sBAABtBugBAACC
B9sBAAADDOgBAAA/CNsBAADrC+gBAAAgCNsBAABwCd8BAADHB9sBAAClCd8BAAD+B9sBAAD0At8B
AAB3AugBAADcAtcBAAB3CuwBAAABBPEBAACUDPYBAQAJAAMAAQAKAAUAAQALAAcAAQAMAAkAAQAN
AAsAAQAOAA0AAQAPAA8AAQAQABEAAQARABMAAQASABUAAQATABcAAQAUABkAAQAVABsAAQAWAB0A
AQAbAB8AAQAcACEAAQAdACMAAQAeACUAAQAfACcAAQAgACkAAQAhACsAAQAiAC0AAQAjAC8AAQAk
ADEAAQAlADMAAQAmADUAAQAnADcAAQAoADkAAQApADsAAQAqAD0AAQArAD8AAQAsAEEAAgA3AEMA
AgA4AEUAAgA5AEcAAgA7AEkAAgA8AEsAAQA9AEsAAgA+AE0AwE0AAAoA8E0AAAsAKE4AAAwAME4A
AA0AWE4AAA4ABIAAAAEAAAAAAAAAAAAAAAAAswAAAAQAAAAAAAAAAAAAAFIBkwIAAAAADQAAAAAA
AAAAAAAAWwHKDAAAAAAEAAAAAAAAAAAAAABSAdQIAAAAAA0AAAAAAAAAAAAAAFsB5wwAAAAABAAA
AAAAAAAAAAAAUgGbCAAAAAAEAAAAAAAAAAAAAABSAYEIAAAAAAQAAAAAAAAAAAAAAFIB1QMAAAAA
DQAAAAAAAAAAAAAAWwHUCQAAAAAAAAAAAQAAAAoLAAALAAoADAAKAA0ACgAOAAoADwAKADEAcQAA
AABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9yQ29udGV4dDEw
MABfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTQwAElFbnVtZXJhYmxlYDEAUmVhZE9ubHlDb2xs
ZWN0aW9uYDEAc2V0X0NhbXBvMQBJbnQzMgBfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTUyAHNl
dF9DYW1wbzIAU0NfMmYyMGQ5MTNkYWYxNDI2NWI4MDAxZTFhZDFlMDc4YzMAc2V0X0NhbXBvMwBJ
bnQ2NABzZXRfQ2FtcG80AHNldF9DYW1wbzUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT0zNgBf
X1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTYAODQ3M0FBNzM5NkU0MkEzNDY0RjAyMEM4MUJFNEI1
OTQ3QjYyRDI0OABfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTQ4AEFEM0NBODVFQTUzQjcyRjgz
NDJEN0Y2NUZFQTVGQzI4NDM3M0Y0NjgAQjk5Qzg5NTg3RjRFN0E4OUJFQUNENEZCNjA0OTc0Mzc0
NTk5QjA2OQA8TW9kdWxlPgA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz4AR2V0T3V0cHV0
SUQAMzMwM0FGOERDMzMwRjVFNEIwREU2N0NGQUYzM0JDNDIxNzk1QTMxRQAxMjg1QUMyODQ2QzNB
NTFDMTU0RjhENzgzMTA2NkZBRDA5QzY0RDhGAHNldF9DUEYAZ2V0X2lkU29saWNpdGFjYW9QVVNI
AHNldF9pZFNvbGljaXRhY2FvUFVTSABTeXN0ZW0uSU8AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rp
b25zLkdlbmVyaWMAT3BlblJlYWQAZ2V0X2lkU29saWNpdGFjYW9VcGxvYWQAc2V0X2lkU29saWNp
dGFjYW9VcGxvYWQAZ2V0X0FycXVpdm9VcGxvYWQATWFya091dHB1dHNGaW5pc2hlZABJc1ZhbGlk
AFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAEVudW1lcmFibGUASURpc3Bvc2Fi
bGUAUnVudGltZUZpZWxkSGFuZGxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AFppcEZpbGUARGF0ZVRpbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAVmFsdWVUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNl
Q3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAFBhcnNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAWmlw
QXJjaGl2ZQBJc0NwZgBjcGYAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBTdWJz
dHJpbmcAZ2V0X0xlbmd0aABFbmRzV2l0aABjcGZDbnBqAElzQ25wagBjbnBqAHNldF9SZWdpc3Ry
b3NUb3RhbABTeXN0ZW0uQ29sbGVjdGlvbnMuT2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNDXzJmMjBkOTEzZGFmMTQyNjViODAwMWUxYWQxZTA3OGMzLmRsbABzZXRfQ2FtcG8xX0lz
TnVsbABzZXRfQ2FtcG8yX0lzTnVsbABzZXRfQ2FtcG8zX0lzTnVsbABzZXRfQ2FtcG80X0lzTnVs
bABzZXRfQ2FtcG81X0lzTnVsbABzZXRfQ1BGX0lzTnVsbABzZXRfaWRTb2xpY2l0YWNhb1BVU0hf
SXNOdWxsAHNldF9pZFNvbGljaXRhY2FvVXBsb2FkX0lzTnVsbABzZXRfUmVnaXN0cm9zVG90YWxf
SXNOdWxsAHNldF9Qcm9jZXNzYWRvX0lzTnVsbABzZXRfUmVqZWl0YWRvX0lzTnVsbABzZXRfVGVt
cG9EZWNvcnJpZG9fSXNOdWxsAHNldF9EYXRhUHJvY2Vzc2FtZW50b19Jc051bGwAc2V0X1Jlc3Vs
dGFkb1Byb2Nlc3NhbWVudG9fSXNOdWxsAHNldF9SZWdpc3Ryb3NSZWplaXRhZG9zX0lzTnVsbABz
ZXRfUmVnaXN0cm9zQWNlaXRvc19Jc051bGwAU2V0TnVsbABnZXRfRW5kT2ZTdHJlYW0AZ2V0X0l0
ZW0Ac2V0X0l0ZW0AU3lzdGVtLklPLkNvbXByZXNzaW9uLkZpbGVTeXN0ZW0AVHJpbQByZXNvdXJj
ZU1hbgBCb29sZWFuAFRpbWVTcGFuAE9wZW4AU2NyaXB0TWFpbgBTeXN0ZW0uSU8uQ29tcHJlc3Np
b24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rp
b24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBzZXRfUHJvY2Vz
c2FkbwBzZXRfUmVqZWl0YWRvAHNldF9UZW1wb0RlY29ycmlkbwBDdWx0dXJlSW5mbwBzZXRfRGF0
YVByb2Nlc3NhbWVudG8Ac2V0X1Jlc3VsdGFkb1Byb2Nlc3NhbWVudG8AT3V0cHV0TmFtZU1hcABP
dXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABTeXN0ZW0uTGlucQBD
aGFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFBpcGVsaW5lQnVmZmVyAFJlc3VsdGFkb1Byb2Nl
c3NhbWVudG9CdWZmZXIAU29saWNpdGFjYW9DbGllbnRlc0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
LmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzJmMjBkOTEzZGFmMTQyNjViODAw
MWUxYWQxZTA3OGMzLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBnZXRfRW50cmllcwBTQ18yZjIwZDkxM2RhZjE0MjY1YjgwMDFlMWFkMWUwNzhjMy5Qcm9wZXJ0
aWVzAGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MAQ29ubmVjdGlvbnMAc2V0X1JlZ2lzdHJvc1JlamVpdGFkb3MAc2V0X1Jl
Z2lzdHJvc0FjZWl0b3MAZ2V0X0NoYXJzAEJ1ZmZlcnMAUnVudGltZUhlbHBlcnMARXhpc3RzAEZp
bmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQARm9ybWF0AE9iamVjdABTZXRF
bmRPZlJvd3NldABQYWRMZWZ0AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50
Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AEZpcnN0AFByaW1lT3V0cHV0AEdldFZhbHVl
V2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRl
eHQAZ2V0X05vdwBBZGRSb3cASW5pdGlhbGl6ZUFycmF5AGdldF9Bc3NlbWJseQBaaXBBcmNoaXZl
RW50cnkAb3BfRXF1YWxpdHkAb3BfSW5lcXVhbGl0eQAAAQBDUAByAG8AYwBlAHMAcwBhAG0AZQBu
AHQAbwAgAEkAbgBpAGMAaQBhAGwAaQB6AGEAZABvACAAewAwAH0AIAB8ACAAAAMiAAADLQABJUEA
cgBxAHUAaQB2AG8AIABOAOMAbwAgAEUAeABpAHMAdABlAAGA13sAMAB9ACAAfAAgAFQAZQByAG0A
aQBuAG8AOgAgAHsAMQB9ACAAbABpAG4AaABhAHMAIABsAGkAZABhAHMAIAB8ACAAewAyAH0AIABs
AGkAbgBoAGEAcwAgAHYA4QBsAGkAZABhAHMAIAB8ACAAewAzAH0AIABsAGkAbgBoAGEAcwAgAHIA
ZQBqAGUAaQB0AGEAZABhAHMAIAB8ACAAUAByAG8AYwBlAHMAcwBhAG0AZQBuAHQAbwAgAEYAaQBu
AGEAbABpAHoAYQBkAG8AIAB7ADQAfQABCyMALAAjACMAMAAAAy4AABcwADAAMAAwADAAMAAwADAA
MAAwADAAAAMvAAAdMAAwADAAMAAwADAAMAAwADAAMAAwADAAMAAwAACAz0EAIABwAHIAbwBwAHIA
aQBlAGQAYQBkAGUAIABJAHMATgB1AGwAbAAgAG4A4wBvACAAcABvAGQAZQAgAHMAZQByACAAZABl
AGYAaQBuAGkAZABhACAAYwBvAG0AbwAgAEYAYQBsAHMAZQAuACAARQBtACAAdgBlAHoAIABkAGUA
IABmAGEAegBlAHIAIABpAHMAcwBvACwAIABhAHQAcgBpAGIAdQBhACAAdQBtACAAdgBhAGwAbwBy
ACAA4AAgAGMAbwBsAHUAbgBhAC4AASlTAG8AbABpAGMAaQB0AGEAYwBhAG8AXwBDAGwAaQBlAG4A
dABlAHMAAC9SAGUAcwB1AGwAdABhAGQAbwBfAFAAcgBvAGMAZQBzAHMAYQBtAGUAbgB0AG8AAB1B
AHIAcQB1AGkAdgBvAF8AVQBwAGwAbwBhAGQAACVpAGQAUwBvAGwAaQBjAGkAdABhAGMAYQBvAF8A
UABVAFMASAAAKWkAZABTAG8AbABpAGMAaQB0AGEAYwBhAG8AXwBVAHAAbABvAGEAZAAAcVMAQwBf
ADIAZgAyADAAZAA5ADEAMwBkAGEAZgAxADQAMgA2ADUAYgA4ADAAMAAxAGUAMQBhAGQAMQBlADAA
NwA4AGMAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAFyd5rrZ
eTdHu6ukhsExrmMABCABAQgDIAABBSABARERBCABAQ4FIAEBEW0dBxQdAw4ODg4ODgIICAgOETkO
Ej0SQQ4dDhJFEUkJAAIBEoCJEYCNBAAAETkFAAIODhwEAAECDgUAARI9DgogABUSgJ0BEoChDBAB
AR4AFRKAqQEeAAUKARKAoQUgABKArQYgAQESgK0DIAAOBQACAg4OBiABHQ4dAwUgAg4ODgQAAQoO
AyAAAgUAAg4ODggAAhFJETkROQQgAQ4OBgACDg4dHA4HCh0IHQgOCAgOCAgDCAMgAAgFIAIOCAgE
AAEDDgUgAg4IAwQgAQMIBAABCA4EIAECDg0HCR0IHQgOCAgOCAMICSADARJRHQgSVQUgAgEIHAMH
AQgGAAIIElUOBSABHQgIBSAAEoDJBiABEoDNHAUAABKA0QYgARwSgNUIAAESgNkRgN0FIAASgOEH
IAIBDhKA4Qi3elxWGTTgiQiJhF3NgIDMkQMGEhgDBhIcAwYSDAMGEhADBhJZAwYSZQMGEmkDBhIk
AwYROAMGETwDBhEsAwYRNAMGETAEIAEBCgQgAQECBSABARE5CyAEAQgdCB0SURJVBSABARJZAyAA
CgQAABJlBAAAEmkFAAEBEmkEAAASJAMAAAEDKAAKAygAAgMoAA4EKAAROQMoAAgECAASZQQIABJp
BAgAEiQIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEA
I1NDXzJmMjBkOTEzZGFmMTQyNjViODAwMWUxYWQxZTA3OGMzAAAFAQAAAAAWAQARQ29weXJpZ2h0
IEAgIDIwMjIAAE0BABwuTkVURnJhbWV3b3JrLFZlcnNpb249djQuNi4xAQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRQuTkVUIEZyYW1ld29yayA0LjYuMQQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAJBNAAAA
AAAAAAAAAKpNAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcTQAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAFAAAABAAAAAMAAAACAAAACQAAAAgAAAAHAAAABgAA
AAUAAAAEAAAAAwAAAAIAAAAGAAAABQAAAAQAAAADAAAAAgAAAAkAAAAIAAAABwAAAAYAAAAFAAAA
BAAAAAMAAAACAAAAAAAAAAkAOwB8AAAACwAAAAoAAAAJAAAACAAAAAcAAAAGAAAABQAAAAQAAAAD
AAAAAgAAAAoAAAAJAAAACAAAAAcAAAAGAAAABQAAAAQAAAADAAAAAgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA7AMAAAAA
AAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBEwDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMgBmADIA
MABkADkAMQAzAGQAYQBmADEANAAyADYANQBiADgAMAAwADEAZQAxAGEAZAAxAGUAMAA3ADgAYwAz
AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAALgAwAAAAcAAoAAEA
SQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyAGYAMgAwAGQAOQAxADMAZABhAGYAMQA0
ADIANgA1AGIAOAAwADAAMQBlADEAYQBkADEAZQAwADcAOABjADMALgBkAGwAbAAAAEgAEgABAEwA
ZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAw
ADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEA
TwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADIAZgAyADAAZAA5ADEAMwBk
AGEAZgAxADQAMgA2ADUAYgA4ADAAMAAxAGUAMQBhAGQAMQBlADAANwA4AGMAMwAuAGQAbABsAAAA
aAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAyAGYAMgAwAGQAOQAxADMAZABh
AGYAMQA0ADIANgA1AGIAOAAwADAAMQBlADEAYQBkADEAZQAwADcAOABjADMAAAA0AAgAAQBQAHIA
bwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAALw9AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Especifica o nome do projeto do Microsoft Visual Studio Tools for Applications. Os nomes de projeto devem ser exclusivos dentro de um pacote."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_2f20d913daf14265b8001e1ad1e078c3</property>
                    <property
                      dataType="System.String"
                      description="Especifica a linguagem de programação usada pelo script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Especifica uma lista separada por vírgulas das variáveis somente leitura."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::Arquivo_Upload,User::idSolicitacao_PUSH,User::idSolicitacao_Upload</property>
                    <property
                      dataType="System.String"
                      description="Especifica uma lista separada por vírgulas das variáveis de gravação/leitura."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Lista dos pontos de interrupção presentes no script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Efetua a soma de verificação para corresponder metadados do componente aos códigos compilados."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">8dba384dad621353823c56ecfd26bc42</property>
                    <property
                      dataType="System.String"
                      description="Efetua a soma de verificação para corresponder metadados do componente aos códigos compilados."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0e1f754a889780e7f5a14205751431f454190a92</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes]"
                      hasSideEffects="true"
                      name="Solicitacao_Clientes">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[idSolicitacao_PUSH]"
                          dataType="i8"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[idSolicitacao_PUSH]"
                          name="idSolicitacao_PUSH" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[CPF]"
                          dataType="i8"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[CPF]"
                          name="CPF" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo1]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo1]"
                          name="Campo1" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo2]"
                          name="Campo2" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo3]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo3]"
                          name="Campo3" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo4]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo4]"
                          name="Campo4" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo5]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo5]"
                          name="Campo5" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento]"
                      hasSideEffects="true"
                      name="Resultado_Processamento">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[idSolicitacao_Upload]"
                          dataType="i8"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[idSolicitacao_Upload]"
                          name="idSolicitacao_Upload" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Processado]"
                          dataType="bool"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Processado]"
                          name="Processado" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Data_Processamento]"
                          dataType="dbDate"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Data_Processamento]"
                          name="Data_Processamento" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Rejeitado]"
                          dataType="bool"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Rejeitado]"
                          name="Rejeitado" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Total]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Total]"
                          name="Registros_Total" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Aceitos]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Aceitos]"
                          name="Registros_Aceitos" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Rejeitados]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Registros_Rejeitados]"
                          name="Registros_Rejeitados" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Tempo_Decorrido]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Tempo_Decorrido]"
                          name="Tempo_Decorrido" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Resultado_Processamento]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento].Columns[Resultado_Processamento]"
                          name="Resultado_Processamento" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="Destino OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Todos os Direitos Reservados; http://www.microsoft.com/sql/support;4"
                  description="Destino OLE DB"
                  name="Tabela FILA&gt;Solicitacao_Clientes"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="O tempo em segundos antes que um comando expire. Zero indica uma expiração infinita."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Especifica o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowset">[FILA].[Solicitacao_Clientes]</property>
                    <property
                      dataType="System.String"
                      description="Especifica a variável que contém o nome do objeto de banco de dados usado para abrir um conjunto de linhas."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="O comando SQL a ser executado."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Especifica a página de código de coluna a ser usada quando não há informações de página de código disponíveis a partir da fonte de dados."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forca o uso do valor da propriedade DefaultCodePage durante a descrição dos dados de caractere."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica o modo usado para acessar o banco de dados."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indica se os valores fornecidos para colunas de identidade serão copiados no destino. Se false, os valores para colunas de identidade serão gerados automaticamente no destino. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indica se as colunas que contêm null terão null inserido no destino. Se false, as colunas que contêm null terão seus valores padrão inseridos no destino. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Especifica as opções a serem usadas com o carregamento rápido. Aplicável apenas se o carregamento rápido estiver ativado."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Especifica quando confirmações são emitidas durante a inserção de dados. Um valor de 0 especifica que uma confirmação será emitida ao final da inserção de dados. Aplicável somente se o carregamento rápido estiver ativado."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SQL-SR671-PUSH]"
                      connectionManagerRefId="Package.ConnectionManagers[SQL-SR671-PUSH]"
                      description="A conexão de tempo de execução OLE DB usada para acessar o banco de dados."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB]"
                      errorOrTruncationOperation="Inserir"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Entrada de Destino OLE DB">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[idSolicitacao_PUSH]"
                          cachedDataType="i8"
                          cachedName="idSolicitacao_PUSH"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[idSolicitacao_PUSH]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[idSolicitacao_PUSH]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[CPF]"
                          cachedDataType="i8"
                          cachedName="CPF"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[CPF]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[CPF]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[Campo1]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Campo1"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo1]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo1]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[Campo2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Campo2"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo2]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo2]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[Campo3]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Campo3"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo3]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo3]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[Campo4]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Campo4"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo4]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo4]" />
                        <inputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].Columns[Campo5]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Campo5"
                          externalMetadataColumnId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo5]"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes].Columns[Campo5]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[idSolicitacao_Cliente]"
                          dataType="i8"
                          name="idSolicitacao_Cliente" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[idSolicitacao_PUSH]"
                          dataType="i4"
                          name="idSolicitacao_PUSH" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[idSolicitacao_Simulacao_Envio]"
                          dataType="i8"
                          name="idSolicitacao_Simulacao_Envio" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[CPF]"
                          dataType="i8"
                          name="CPF" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo1]"
                          codePage="1252"
                          dataType="text"
                          name="Campo1" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo2]"
                          codePage="1252"
                          dataType="text"
                          name="Campo2" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo3]"
                          codePage="1252"
                          dataType="text"
                          name="Campo3" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo4]"
                          codePage="1252"
                          dataType="text"
                          name="Campo4" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Campo5]"
                          codePage="1252"
                          dataType="text"
                          name="Campo5" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Agendado]"
                          dataType="bool"
                          name="Agendado" />
                        <externalMetadataColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB].ExternalColumns[Enviado]"
                          dataType="bool"
                          name="Enviado" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Outputs[Saída de Erro de Destino OLE DB]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Saída de Erro de Destino OLE DB"
                      synchronousInputId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Outputs[Saída de Erro de Destino OLE DB].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo.Paths[Resultado_Processamento]"
                  endId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload.Inputs[Entrada de Comando OLE DB]"
                  name="Resultado_Processamento"
                  startId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Resultado_Processamento]" />
                <path
                  refId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo.Paths[Solicitacao_Clientes]"
                  endId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes.Inputs[Entrada de Destino OLE DB]"
                  name="Solicitacao_Clientes"
                  startId="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload.Outputs[Solicitacao_Clientes]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila\Verificar Clientes Já Carregados?"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Tarefa Executar SQL"
          DTS:DTSID="{1313A0BD-15B2-42A2-950E-ABDF52F48379}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Verificar Clientes Já Carregados?"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{2D83BD83-B4B0-40EA-8C8E-6C62AEC37995}"
              SQLTask:SqlStatementSource="DECLARE @idSolicitacao_PUSH AS BIGINT = ?&#xA;&#xA;SELECT &#xA;    Qtd_Total_Registros          = COUNT(*), &#xA;    Registros_Agendados_Enviados = COUNT([idSolicitacao_Simulacao_Envio])&#xA;FROM &#xA;    [DB5138_PUSH].[FILA].[Solicitacao_Clientes] WITH (NOLOCK)&#xA;WHERE&#xA;    [idSolicitacao_PUSH] = @idSolicitacao_PUSH"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="Qtd_Total_Registros"
                SQLTask:DtsVariableName="User::Qtd_Total_Registros" />
              <SQLTask:ResultBinding
                SQLTask:ResultName="Registros_Agendados_Enviados"
                SQLTask:DtsVariableName="User::Registros_Agendados_Enviados" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::idSolicitacao_PUSH"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição]"
          DTS:CreationName=""
          DTS:DTSID="{6B3DB0F5-8498-4F06-906F-26E23CD88BDF}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::Qtd_Total_Registros] &gt; 0"
          DTS:From="Package\Para cada Upload Arquivo Registrado na Fila\Verificar Clientes Já Carregados?"
          DTS:ObjectName="Restrição"
          DTS:To="Package\Para cada Upload Arquivo Registrado na Fila\Apagar todos os clientes caso não tenham sido agendados" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição 1]"
          DTS:CreationName=""
          DTS:DTSID="{43E4957D-C4ED-4510-B662-B5C91F46516D}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::Qtd_Total_Registros] == 0"
          DTS:From="Package\Para cada Upload Arquivo Registrado na Fila\Verificar Clientes Já Carregados?"
          DTS:ObjectName="Restrição 1"
          DTS:To="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição 2]"
          DTS:CreationName=""
          DTS:DTSID="{17FCBC7B-B3B7-4635-8F8E-BAA191FDE9B7}"
          DTS:From="Package\Para cada Upload Arquivo Registrado na Fila\Apagar todos os clientes caso não tenham sido agendados"
          DTS:ObjectName="Restrição 2"
          DTS:To="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição 3]"
          DTS:CreationName=""
          DTS:DTSID="{EA1D8240-DA70-4821-966A-8D66DAF63E65}"
          DTS:From="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Restrição 3"
          DTS:To="Package\Para cada Upload Arquivo Registrado na Fila\Apagar arquivo de upload" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C65D8E1D-2192-4D42-A199-2C99317424A5}"
          DTS:ObjectName="{C65D8E1D-2192-4D42-A199-2C99317424A5}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::idSolicitacao_Upload" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{ED62D012-A6CD-4038-8185-F2A26ED2DF18}"
          DTS:ObjectName="{ED62D012-A6CD-4038-8185-F2A26ED2DF18}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::idSolicitacao_PUSH" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4BB05680-6DDE-4B39-8484-EE3C5AA39718}"
          DTS:ObjectName="{4BB05680-6DDE-4B39-8484-EE3C5AA39718}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::Arquivo_Upload" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restrição]"
      DTS:CreationName=""
      DTS:DTSID="{6CA6E7DC-B1F0-4867-8425-9A023744847E}"
      DTS:From="Package\Captura Lista de Arquivos Uploados ou Tarefas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restrição"
      DTS:To="Package\Para cada Upload Arquivo Registrado na Fila" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta seção CDATA contém as informações de layout do pacote. A seção inclui informações como coordenadas (x,y), largura e altura.-->
<!--Se você editar manualmente esta seção e cometer algum erro, poderá excluí-la. -->
<!--O pacote ainda poderá ser carregado normalmente, mas as informações de layout anteriores serão perdidas e o designer reorganizará automaticamente os elementos na superfície de design.-->
<Objects
  Version="8">
  <!--Cada nó abaixo conterá propriedades que não afetam o comportamento em tempo de execução.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="299,42"
          Id="Package\Captura Lista de Arquivos Uploados ou Tarefas"
          TopLeft="419,36" />
        <NodeLayout
          Size="200,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Apagar arquivo de upload"
          TopLeft="527,371" />
        <NodeLayout
          Size="355,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Apagar todos os clientes caso não tenham sido agendados"
          TopLeft="409,71.666666666667" />
        <NodeLayout
          Size="159,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo"
          TopLeft="256,269.666666666667" />
        <NodeLayout
          Size="233,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Verificar Clientes Já Carregados?"
          TopLeft="55,74" />
        <EdgeLayout
          Id="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição]"
          TopLeft="288,93.8333333333335">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121,0"
              Start="0,0"
              End="113.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="113.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="48.75,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição 1]"
          TopLeft="171.5,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="138.833333333333,153.666666666667"
              Start="0,0"
              End="138.833333333333,146.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.2814445828147" />
                  <mssgle:CubicBezierSegment
                    Point1="0,87.2814445828147"
                    Point2="0,91.2814445828147"
                    Point3="4,91.2814445828147" />
                  <mssgle:LineSegment
                    End="134.833333333333,91.2814445828147" />
                  <mssgle:CubicBezierSegment
                    Point1="134.833333333333,91.2814445828147"
                    Point2="138.833333333333,91.2814445828147"
                    Point3="138.833333333333,95.2814445828147" />
                  <mssgle:LineSegment
                    End="138.833333333333,146.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="61.4166666666667,96.2814445828147,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição 2]"
          TopLeft="586.5,113.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-225.833333333333,156"
              Start="0,0"
              End="-225.833333333333,148.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,88.667496886675" />
                  <mssgle:CubicBezierSegment
                    Point1="0,88.667496886675"
                    Point2="0,92.667496886675"
                    Point3="-4,92.667496886675" />
                  <mssgle:LineSegment
                    End="-221.833333333333,92.667496886675" />
                  <mssgle:CubicBezierSegment
                    Point1="-221.833333333333,92.667496886675"
                    Point2="-225.833333333333,92.667496886675"
                    Point3="-225.833333333333,96.667496886675" />
                  <mssgle:LineSegment
                    End="-225.833333333333,148.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Para cada Upload Arquivo Registrado na Fila.PrecedenceConstraints[Restrição 3]"
          TopLeft="335.5,311.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="291.5,59.333333333333"
              Start="0,0"
              End="291.5,51.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.6666666666665"
                    Point2="0,29.6666666666665"
                    Point3="4,29.6666666666665" />
                  <mssgle:LineSegment
                    End="287.5,29.6666666666665" />
                  <mssgle:CubicBezierSegment
                    Point1="287.5,29.6666666666665"
                    Point2="291.5,29.6666666666665"
                    Point3="291.5,33.6666666666665" />
                  <mssgle:LineSegment
                    End="291.5,51.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="929,478"
          Size="929,521"
          Id="Package\Para cada Upload Arquivo Registrado na Fila"
          TopLeft="107,158" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restrição]"
          TopLeft="570,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,80"
              Start="0,0"
              End="0,72.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="235,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes"
          TopLeft="625,139" />
        <NodeLayout
          Size="216,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Leitura do Arquivo de Upload"
          TopLeft="231,142" />
        <NodeLayout
          Size="303,42"
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Atualiza Progresso em FILA&gt;Solicitacao_Upload"
          TopLeft="189,404" />
        <EdgeLayout
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo.Paths[Solicitacao_Clientes]"
          TopLeft="447,161.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="178,0"
              Start="0,0"
              End="170.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="170.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="41.3767578125,5,87.746484375,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo.Paths[Resultado_Processamento]"
          TopLeft="339.75,184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,220"
              Start="0,0"
              End="0,212.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,212.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-58.19203125,100.71875,116.3840625,11.0625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Para cada Upload Arquivo Registrado na Fila\Importar Arquivo\Tabela FILA&gt;Solicitacao_Clientes">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>